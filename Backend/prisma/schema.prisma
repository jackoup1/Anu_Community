generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String
  role     Role   @default(USER)
  level    Level?

  assignmentsCreated Assignment[]
  comments           Comment[]

  departmentId Int?
  department   Department?   @relation(fields: [departmentId], references: [id])
  TeamRequest  TeamRequest[]
}

model Department {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  users    User[]
  subjects Subject[]
}

model Subject {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  assignments Assignment[]
  departments Department[]
}

model Assignment {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime
  pdfUrl      String?

  isTeamBased    Boolean @default(false)
  minTeamMembers Int?
  maxTeamMembers Int?

  creatorId Int
  creator   User @relation(fields: [creatorId], references: [id])

  subjectId   Int
  subject     Subject       @relation(fields: [subjectId], references: [id])
  comments    Comment[]
  TeamRequest TeamRequest[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  creatorId Int
  creator   User @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  assignmentId Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
}

model TeamRequest {
  id Int @id @default(autoincrement())

  requesterId Int
  requester   User @relation(fields: [requesterId], references: [id])

  assignmentId Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id])

  type RequestType

  message         String?
  whatsApp        String
  currentTeamSize Int?

  createdAt DateTime @default(now())

  @@unique([requesterId, assignmentId, type])
}

enum Role {
  USER
  ADMIN
}

enum Level {
  FIRST
  SECOND
  THIRD
  FOURTH
}

enum RequestType {
  JOIN // User wants to join an existing team
  RECRUIT // User wants to recruit members to their team
}
